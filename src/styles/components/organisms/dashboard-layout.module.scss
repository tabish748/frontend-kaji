// DashboardLayout.module.scss
@import "../../base/_mixins.scss";
@import "../../base/_colors.scss";

.dashboardLayout {
  display: flex;
  min-height: 100vh;
  background-color: #F2F5F7;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 999;
  display: none;

  @include respond-to('small') {
    display: block;
  }
}
 
.sidebar {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 250px;
  background-color: $white;
  z-index: 1000;
  transition: width 0.4s, transform 0.4s;
  overflow-y: auto;
  padding: 73px 0px 20px 0px;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 1px 4px;

  // Collapsed state (desktop)
  &.collapsed {
    width: 80px;
    overflow: hidden;

    .dashboardSidebarTitle,
    .menuLabel,
    .heading,
    .dropdownMenu,
    .menuArrowIcon {
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s, visibility 0.3s;
      transition-delay: 0s;
    }

    .menuIcon {
      opacity: 1 !important;
      visibility: visible !important;
      transition: none !important;
      margin: auto !important;
    }

    // Hover effect for collapsed sidebar (desktop only)
    &:hover {
      width: 250px;
      overflow: visible;
      // z-index: 1100;

      .dashboardSidebarTitle,
      .menuLabel,
      .heading,
      .dropdownMenu {
        opacity: 1;
        visibility: visible;
        transition: opacity 0.3s, visibility 0.3s;
        transition-delay: 0.2s;
      }

      .menuIcon {
        margin-right: .6rem !important;
      }
    }

    // Disable hover effect on mobile
    @include respond-to('small') {
      &:hover {
        width: 250px;
        transform: translateX(-100%);
      }
    }
  }

  // Mobile behavior
  @include respond-to('small') {
    width: 250px;
    transform: translateX(-100%);
    &.show {
      transform: translateX(0);
    }
    &.collapsed {
      width: 250px;
      transform: translateX(-100%);
    }
  }

  &::-webkit-scrollbar {
    width: .4rem;
  }

  &::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  &::-webkit-scrollbar-thumb {
    background: #cccccc;
    border-radius: 5px;
  }

  &::-webkit-scrollbar-thumb:hover {
    background: #cccccc;
  }
  .dashboardSidebarTitle {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;
  }

  h5 {
    color: $primary;
  }

  .menuIcon {
    margin-right: .6rem;
    width: 14px;
    height: 14px;
  }

  .menuButton {
    margin: 0;
    width: fit-content;
    font-size: 14px !important;
  }

  .sideBarLogoParent {
    height: fit-content;
    align-items: flex-start !important;
    
    @include respond-to('small') {
      align-items: center !important;
      gap: 0.5rem;
    }
  }

  &.collapsed~.main .header .hamburgerIcon {
    transform: rotate(180deg);
    transition: transform 0.4s ease;
  }

  &:hover {
    // width: 220px;

    .dashboardSidebarTitle {
      opacity: 1;
      visibility: visible;
    }

    .menuArrowIcon {
      display: block !important;
    }

    .menuLabel,
    .dropdownMenu {
      display: block;
    }

    .menuIcon {
      margin: unset;
      margin-right: .6rem !important;
    }

    .heading,
    .dropdown,
    .menuButton {
      display: block;
      pointer-events: auto;
      transition: display .15s ease-in-out;
    }

    .menuIcon {
      padding: 0;
    }

    .sideBarLogoParent {
      height: fit-content;
      align-items: flex-start !important;
    }
  }
}

.sidebar.collapsed ~ .main {
  margin-left: 80px !important;
}

.sidebar.collapsed~.main .header .dashboardSidebarTitle {
  display: none;
}

.sidebar.collapsed~.main .header .hamburgerIcon {
}

.sidebar.collapsed:hover~.main .content {
  margin-left: 220px !important;
  transition: margin-left 0.4s ease;
}

.hamburger {
  display: none;
  cursor: pointer;

  @include respond-to('small') {
    display: block;
  }
}

.main {
  flex-grow: 1;
  background-color: #f4f4f4;
  width: calc(100% - 250px);
  margin-top: 90px;
  position: relative;
  margin-left: 250px;
  transition: margin-left 0.4s;
  padding: 20px;

  @include respond-to('small') {
    margin-left: 0;
    margin-top: 0;
  }
}

.header {
  background-color: $white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1001; 
  padding: 1rem;
  border-bottom: 1px solid #dedede;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 1px 4px -1px;
  @include responsive-font(16px, 24px);

  @include respond-to('small') {
    margin-left: 0;
    position: static;
    padding: 1rem;
  }
}
 
.headingBuddy {
  margin: 0;
  @include responsive-font(18px, 20px);
  font-weight: bold;
}

.dark {
  color: #333;
}

.content {
  background-color: #f4f4f4;
  padding: 20px;
  border-radius: 2px;
  width: -webkit-fill-available;
  transition: all 0.4s;

  @include respond-to('small') {
    margin-left: 0;
  }
}

.dropdown {
  padding: 0;
  background: #fff;
  margin: 0 auto;
}

.nav {
  list-style: none;
  padding: 0;
  margin-top: 2rem;

  button {
    margin-bottom: 1.3rem;
    @include responsive-font(.7rem, .9rem);
  }
}

.pointerCursor {
  cursor: pointer;
}

.logo {
  display: block;
  margin: 0 auto;
  max-width: 180px;
}

.headerInfo {
  display: flex;
  gap: 0rem;
  align-items: center;
  margin-right: 25px;

  .currentDate {
    @include responsive-font(.7rem, 12px);
    width: fit-content;
    height: fit-content; 
    padding: 9px 18px;
    font-weight: bold; 
    color: $mud-gray; 
    @include respond-to('small') {
      display: none;
    }
  }

  .userName {
    font-size: 12px;
    width: fit-content;
    height: fit-content;
    background-color: white;
    padding: 10px 15px;
    font-weight: normal;
    border-radius: 4px;

    @include respond-to('small') {
      display: none;
    }

    @include responsive-font(.7rem, 14px);
  }
}

.logoutButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  justify-content: center;
  background-color: $white;
  border: none;
  border-radius: 4px;
  padding: 7px;
  color: #fff;
  cursor: pointer;
  transition: background-color 0.15s ease;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  // border: 2px solid #dedede;

  &:hover {
    background-color: #f4f5f5;
  }
}

.footer {
  margin-top: 1.2rem;
  text-align: center;
  position: absolute;
  bottom: 23px;
  width: -webkit-fill-available;

  p {
    font-size: 12px;
  }
}

.activeItemSidebarLink {
  background-color: #c4cfe1;
}

.menuBtnParent {
  display: flex;
  align-items: center;
  color: $mud-gray !important;
  font-weight: 500;
}

.heading {
  font-size: 12px;
  padding-left: 20px;
  // font-weight: 700;
  color: rgba(26,51,83,.6)!important;
}

.iconMargin {
  margin: 0 4px 4px 0;
}

.hamburgerIcon {
  cursor: pointer;
  margin-left: .5rem;
  // margin-top: 7px;
  transition: transform 0.4s ease;
  position: relative;
  z-index: 1002;
  
  @include respond-to('small') {
    display: none;
  }
  
  &.rotated {
    transform: rotate(180deg);
  }
}

.dashboardSidebarTitle {
  color: $mud-gray;
  font-size: 14px;
  font-weight: bold;
  
  @include respond-to('small') {
    display: none;
  }
}

.desktopLogo {
  @include respond-to('small') {
    display: none;
  }
}

.mobileLogo {
  display: none;
  
  @include respond-to('small') {
    display: block;
  }
}

.mobileHamburger {
  display: none;
  cursor: pointer;
  position: relative;
  z-index: 1002;
  transition: margin-left 0.4s ease;
  
  @include respond-to('small') {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  img {
    transition: transform 0.4s ease;
    transform: rotate(180deg);
  }
  
  &.rotated {
    margin-left: 6rem;
    
    img {
      transform: rotate(0deg);
    }
  }
}

.sidebarList {
  list-style: none;
  padding: 0;

  .sidebarItem {
    padding: 17px 0px;

    &:hover {
      .sidebarItemIconTextWrapper {

        a,
        svg {
          transition: .4s;
          color: $primary !important;
          // fill: $primary;
        }
      }
    }

    .sidebarItemIconTextWrapper {
      display: flex;
      align-items: center;
      cursor: pointer;
      padding: 0 30px 0 20px;
      position: relative;
      // gap: 0 8px;
    }
  }

  a:nth-child(2) {
    font-size: 13px !important;
    // font-weight: 600;
  }

  
  a:nth-child(3) {
    font-size: 13px !important;
    font-weight: 300;
  }
}

.sidebarItem a {
  display: block;
  text-decoration: none;
}

.dropdownIcon {
  margin-right: 8px;
  color: inherit;
  flex-shrink: 0;
}

.dropdownItemContent {
  display: flex;
  align-items: center;
  gap: 8px;
  min-height: 24px;
}

.dropdownMenu {
  display: none;
  list-style: none;
  transition: all 0.4s ease;
}

.sidebarItem .dropdownMenu {
  display: block;

  li {
    padding: 0 0 0 22px;
    margin: 6px 0;
    cursor: pointer;
    font-size: 12px;
    font-weight: 300;
    position: relative;
    
    .dropdownItemContent {
      span {
        margin-left: 24px;
      }
      
      .dropdownIcon + span {
        margin-left: 0;
      }
    }
  }
  
  // Separate hover selectors for better control
  > li:hover > .dropdownItemContent {
    color: $primary;
    
    span {
      color: $primary;
    }
    
    .dropdownIcon {
      color: $primary;
    }
    
    .subDropdownArrow {
      color: $primary;
    }
  }
  
  // Specific selector for sub-dropdown container items
  > li:hover > .subDropdownContainer > .dropdownItemContent {
    color: $primary;
    
    span {
      color: $primary;
    }
    
    .dropdownIcon {
      color: $primary;
    }
    
    .subDropdownArrow {
      color: $primary;
    }
  }
}

.menuArrowIcon {
  position: absolute;
  right: 10px;
  width: 14px;
  height: 14px;
  display: flex;
  align-items: center;
}

.menuArrowIcon {
  transition: transform 0.4s ease;
}

.arrowRotated {
  transform: rotate(180deg);
  /* Rotates the arrow icon 180 degrees */
  transition: transform 0.4s ease;
  /* Smooth transition for the rotation */
  color: $primary;
  
  svg {
    fill: $primary;
  }
}

.dropdownMenu {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0s ease-out;
}

.dropdownMenu.open {
  max-height: 500px;
  transition: max-height 0s ease-out;
  margin-top: 6px;
}

.active,
.activeDropdownItem {
  background-color: #ebf1ff !important;
  color: $primary;
  /* Example: darker text color */
  border-right: 4px solid $primary;

  svg {
    fill: $primary;
  }
  
  .dropdownItemContent {
    color: $primary;
    
    span {
      color: $primary !important;
    }
    
    .dropdownIcon {
      color: $primary;
    }
    
    .subDropdownArrow {
      color: $primary;
    }
  }
}

.arrowWrapper {
  margin-left: 1rem;
  img {
    width: 8px;
  }
}
.arrow {
  // display: inline-block;
  // vertical-align: middle;
  display: block;
  width: 7px;
  height: 10px;
  transition: transform 0.3s ease, opacity 0.3s ease;
    /* Non-active arrows will be more transparent */
  line-height: 12px;
}

.arrowUp {
  /* Adjust this as needed */
}

.arrowDown {
  transform: rotate(180deg);
}

.desktopHamburger {
  @include respond-to('small') {
    display: none;
  }
}

.subDropdownContainer {
  cursor: pointer;
  
  .dropdownItemContent {
    display: flex;
    align-items: center;
    min-height: 24px;
    cursor: pointer;
    position: relative;
    padding-right: 30px;
    
    .subDropdownArrow {
      position: absolute;
      right: 10px;
      transition: transform 0.4s ease;
      width: 14px;
      height: 14px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
  
  &.open .dropdownItemContent .subDropdownArrow {
    transform: rotate(90deg);
  }
}

.subDropdownMenu {
  display: none;
  list-style: none;
  transition: all 0.4s ease;
  overflow: hidden;
  max-height: 0;
  padding-left: 0;
  
  &.open {
    display: block;
    max-height: 200px;
    margin-top: 4px;
  }
  
  li {
    padding: 8px 30px 8px 50px;
    margin: 4px 0;
    cursor: pointer;
    font-size: 11px;
    font-weight: 200;
    
    &.activeDropdownItem {
      .dropdownItemContent {
        color: $primary;
        
        span {
          color: $primary !important;
        }
        
        .dropdownIcon {
          color: $primary;
        }
      }
    }
  }
  
  // More specific hover selector for sub-dropdown items
  > li:hover {
    background-color: rgba(235, 241, 255, 0.5);
    
    // Only affect the directly hovered sub-item
    > .dropdownItemContent,
    > a > .dropdownItemContent {
      color: $primary;
      
      span {
        color: $primary;
      }
      
      .dropdownIcon {
        color: $primary;
      }
    }
  }
}

// Target the main sidebar item when its dropdown is expanded
.sidebarItem {
  &:hover {
    > .sidebarItemIconTextWrapper {
      a, svg {
        transition: .4s;
        color: $primary !important;
        // fill: $primary;
      }
    }
  }
  
  // When dropdown is open/active, make the main item text blue  
  &.dropdown {
    // When this sidebar item has an open dropdown menu
    &:has(.dropdownMenu.open) {
      .sidebarItemIconTextWrapper {
        a {
          color: $primary !important;
        }
        
        svg:not(.menuArrowIcon) {
          // fill: $primary !important;
        }
      }
    }
  }
  
  // More reliable approach using class-based targeting
  &.dropdownActive {
    .sidebarItemIconTextWrapper {
      a {
        color: $primary !important;
      }
      
      svg:not(.menuArrowIcon) {
        // fill: $primary !important;
      }
    }
  }
  
  // When dropdown has open menu, make parent text blue (fallback approach)
  &:has(.dropdownMenu.open) {
    .sidebarItemIconTextWrapper {
      a {
        color: $primary !important;
      }
      
      svg:not(.menuArrowIcon) {
        // fill: $primary !important;
      }
    }
  }
}

// When dropdown arrow is rotated (dropdown is expanded), style the parent text
.sidebarItemIconTextWrapper {
  .menuArrowIcon.arrowRotated {
    color: $primary;
  }
  
  // When containing rotated arrow, make text blue
  &:has(.arrowRotated) {
    a {
      color: $primary !important;
    }
    
    svg:not(.menuArrowIcon) {
      // fill: $primary !important;
    }
  }
}

// Fallback for browsers without :has support - when arrow is rotated, target parent
.sidebarItem:has(.menuArrowIcon.arrowRotated) .sidebarItemIconTextWrapper a {
  color: $primary !important;
}

// Additional targeting for sub-dropdown containers when open
.subDropdownContainer.open {
  > .dropdownItemContent {
    span {
      color: $primary !important;
    }
    
    .dropdownIcon {
      color: $primary;
    }
    
    .subDropdownArrow {
      color: $primary;
    }
  }
}

// Target dropdown items when their sub-dropdown is active
.sidebarItem .dropdownMenu li.subDropdownActive {
  > .subDropdownContainer > .dropdownItemContent {
    span {
      color: $primary !important;
    }
    
    .dropdownIcon {
      color: $primary;
    }
    
    .subDropdownArrow {
      color: $primary;
    }
  }
}

// Main content margin adjustments
.sidebar.collapsed ~ .main {
  margin-left: 80px !important;
}

// Keep main content margin at 80px even during hover
.sidebar.collapsed:hover ~ .main {
  margin-left: 80px !important;
}

@include respond-to('small') {
  .sidebar.collapsed ~ .main {
    margin-left: 0 !important;
  }
}

.sidebar.collapsed:hover {
  .dashboardSidebarTitle,
  .menuLabel,
  .heading,
  .dropdownMenu,
  .menuArrowIcon {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s, visibility 0.3s;
    transition-delay: 0.2s;
  }
}

// Ensure collapsed sidebar icons are always visible and centered
.sidebar.collapsed {
  .menuIcon {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    margin: auto !important;
  }
  
  .menuLabel {
    display: none !important;
  }
}

// Ensure collapsed sidebar on hover shows labels with delay
.sidebar.collapsed:hover {
  .menuLabel {
    display: block !important;
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s, visibility 0.3s;
    transition-delay: 0.2s;
  }
  
  .menuIcon {
    margin-right: .6rem !important;
    margin-left: 0 !important;
  }
}


